@*@model IEnumerable<timeTracker.Domain.TimeSheetEntry>*@
@model PagedList.IPagedList<timeTracker.Domain.TimeSheetEntry>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>TimeSheet Entries</h2>

<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.OwnerName)*@
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().CompanyName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ProjectName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Notes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Billable)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Day)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Hours)
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Workdate)*@
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.OwnerName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CompanyName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProjectName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Notes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Billable)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Day)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Hours)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Workdate)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
